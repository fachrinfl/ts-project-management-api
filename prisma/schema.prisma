generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id              String         @id @default(uuid())
    name            String
    email           String         @unique
    password        String
    photo           String?
    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    RefreshToken    RefreshToken[]
    createdProjects Project[]      @relation("CreatedProjects")
    projectTeams    Project[]      @relation("ProjectTeam")
    projectId       String?
    Project         Project[]
    Task            Task[]
    createdTasks    Task[]         @relation("CreatedTasks")
}

model RefreshToken {
    id        String   @id @default(uuid())
    token     String   @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    expiresAt DateTime
}

model Project {
    id          String        @id @default(uuid())
    name        String
    startDate   DateTime
    endDate     DateTime
    description String?
    status      ProjectStatus
    documents   Json?
    teams       User[]        @relation("ProjectTeam")
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    createdById String
    createdBy   User          @relation("CreatedProjects", fields: [createdById], references: [id])
    User        User?         @relation(fields: [userId], references: [id])
    userId      String?
    Task        Task[]
}

enum ProjectStatus {
    active
    on_hold
    completed
}

model Task {
    id          String       @id @default(uuid())
    name        String
    description String?
    startDate   DateTime
    endDate     DateTime
    status      TaskStatus
    priority    TaskPriority
    project     Project      @relation(fields: [projectId], references: [id])
    projectId   String
    assignee    User         @relation(fields: [assigneeId], references: [id])
    assigneeId  String
    createdById String
    createdBy   User         @relation("CreatedTasks", fields: [createdById], references: [id])
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

enum TaskStatus {
    todo
    in_progress
    done
}

enum TaskPriority {
    high
    medium
    low
}
